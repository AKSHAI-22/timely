version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: ledgersentinels-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-ledgersentinels}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - ledgersentinels-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ledgersentinels-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-password}@mongodb:27017/${MONGO_DATABASE:-ledgersentinels}?authSource=admin
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-7d}
      JWT_REFRESH_EXPIRES_IN: ${JWT_REFRESH_EXPIRES_IN:-30d}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
      RPC_URL: ${RPC_URL}
      PRIVATE_KEY: ${PRIVATE_KEY}
    ports:
      - "5000:5000"
    volumes:
      - backend_uploads:/app/uploads
    depends_on:
      - mongodb
    networks:
      - ledgersentinels-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ledgersentinels-frontend
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: ${REACT_APP_API_URL:-http://localhost:5000/graphql}
      REACT_APP_NETWORK_ID: ${REACT_APP_NETWORK_ID:-31337}
      REACT_APP_TIMESLOT_NFT_ADDRESS: ${REACT_APP_TIMESLOT_NFT_ADDRESS}
      REACT_APP_MARKETPLACE_ADDRESS: ${REACT_APP_MARKETPLACE_ADDRESS}
      REACT_APP_ESCROW_ADDRESS: ${REACT_APP_ESCROW_ADDRESS}
      REACT_APP_REVIEW_SYSTEM_ADDRESS: ${REACT_APP_REVIEW_SYSTEM_ADDRESS}
      REACT_APP_USER_REGISTRY_ADDRESS: ${REACT_APP_USER_REGISTRY_ADDRESS}
      REACT_APP_FACTORY_ADDRESS: ${REACT_APP_FACTORY_ADDRESS}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - ledgersentinels-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: ledgersentinels-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - ledgersentinels-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: ledgersentinels-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ledgersentinels-network

volumes:
  mongodb_data:
  backend_uploads:
  redis_data:

networks:
  ledgersentinels-network:
    driver: bridge
